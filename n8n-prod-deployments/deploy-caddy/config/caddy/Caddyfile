# Caddy configuration for n8n production deployment
# Replace 'your-domain.com' with your actual domain

your-domain.com {
    # Automatic HTTPS with Let's Encrypt
    # Caddy will automatically obtain and renew SSL certificates
    
    # Email for Let's Encrypt (optional if set via environment)
    # tls your-email@domain.com
    
    # Reverse proxy to n8n service
    reverse_proxy n8n:5678 {
        # Health check
        health_uri /healthz
        health_interval 30s
        health_timeout 5s
        
        # Headers for proper proxy handling
        header_up Host {host}
        header_up X-Real-IP {remote_host}
        header_up X-Forwarded-For {remote_host}
        header_up X-Forwarded-Proto {scheme}
        header_up X-Forwarded-Port {server_port}
    }
    
    # Security headers
    header {
        # Enable HSTS
        Strict-Transport-Security max-age=31536000;
        # Prevent clickjacking
        X-Frame-Options DENY
        # Content type sniffing protection
        X-Content-Type-Options nosniff
        # XSS protection
        X-XSS-Protection "1; mode=block"
        # Referrer policy
        Referrer-Policy strict-origin-when-cross-origin
        # Content Security Policy
        Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' wss: https:;"
    }
    
    # Logging
    log {
        output file /var/log/caddy/n8n-access.log {
            roll_size 100MB
            roll_keep 5
            roll_keep_for 720h
        }
        format json
        level INFO
    }
    
    # Handle errors
    handle_errors {
        @502 expression {http.error.status_code} == 502
        handle @502 {
            respond "n8n service is currently unavailable. Please try again later." 502 {
                close
            }
        }
        
        @404 expression {http.error.status_code} == 404
        handle @404 {
            respond "Page not found" 404 {
                close
            }
        }
        
        @500 expression {http.error.status_code} == 500
        handle @500 {
            respond "Internal server error" 500 {
                close
            }
        }
    }
    
    # Rate limiting (optional)
    # rate_limit {
    #     zone static_ip_10rs {
    #         key {remote_host}
    #         events 10
    #         window 1s
    #     }
    # }
}

# Optional: www redirect
www.your-domain.com {
    redir https://your-domain.com{uri} permanent
}

# Health check endpoint for load balancers
:8080 {
    respond /health "OK" 200
    respond /ping "pong" 200
    
    # Metrics endpoint (optional)
    handle /metrics {
        respond "Caddy metrics endpoint" 200
    }
}

# Global options
{
    # Email for Let's Encrypt
    email {$CADDY_EMAIL}
    
    # ACME CA server (use Let's Encrypt staging for testing)
    # acme_ca https://acme-staging-v02.api.letsencrypt.org/directory
    
    # Admin API
    admin off
    
    # Auto HTTPS
    auto_https on
    
    # Log level
    log {
        level INFO
    }
}